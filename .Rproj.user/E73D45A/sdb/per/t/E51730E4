{
    "collab_server" : "",
    "contents" : "library(labdsv)\n\n#create the FACS rating matrix\ndims <- convert_FACS_to_dim(info_base)\n\ncolnames(dims) <- 0:(ncol(dims)-1)\n\n#name each FACS row\nrownames(dims) <- info_base$Picture.ID\n\ndims <- dims[,c(apply(dims, 2, sd)!=0)]\n\ndealwith0 <- dist(dims)\ndealwith0[which(dealwith0==0)]<-1e-10\n\n#check the stress to find the best number of dimensions for MDS\nstress <- c()\n\nfor(i in 1:7){\n  stress[i] <- bestnmds(dealwith0, k=i)$stress\n}\n\nplot(stress, type = 'l', xlab = \"Number of Dims\", main= \"Stress vs # of Dims\")\npoints(stress, pch=4)\n\n#it seems as though 3 dimensions is best here, but let's do 2 dimensions first\n\nMDS2d <- bestnmds(dealwith0, k=2)\n\nplot(MDS2d$points, pch = 16, col = palette()[c(1:6,8)][as.factor(info_base$Display[match(rownames(MDS2d$points), info_base$Picture.ID)])], xlab = \"\", ylab = '')\nlegend(\"topright\", legend = levels(as.factor(info_base$Display[match(rownames(MDS2d$points), info_base$Picture.ID)])), pch = 16, col = palette()[c(1:6,8)], cex=1, inset=c(0.02))\n\n#cool. Now let's find the centroid of each emotion, and define the distances from each other.\nemotionCentroids <- aggregate(MDS2d$points, by= info_base$Display[match(rownames(MDS2d$points), info_base$Picture.ID)], FUN=colMeans)\n\npolarMDS2dPoint <- cart2pol(MDS2d$points[,1], MDS2d$points[,2])\n\n#now let's take a peak at 3 dimensions\n\nMDS3d <- bestnmds(dealwith0, k=3)\n\nrgl::plot3d(MDS3d$points, col = palette()[c(1:6,8)][as.factor(info_base$Display[match(rownames(MDS3d$points), info_base$Picture.ID)])], xlab = \"\", ylab = '', zlab='')\nrgl::legend3d(\"topright\", legend = levels(as.factor(info_base$Display[match(rownames(MDS3d$points), info_base$Picture.ID)])), pch = 16, col = palette()[c(1:6,8)], cex=1, inset=c(0.02))\nrgl::text3d(MDS3d$points[,1],MDS3d$points[,2],MDS3d$points[,3], texts = rownames(MDS3d$points), color= palette()[c(1:6,8)][as.factor(info_base$Display[match(rownames(MDS3d$points), info_base$Picture.ID)])])\n\n\n\n#calculate a global dprime for each image across all participants.\n\ndprimes <- calc_dprime(data, \"Target_name\",\"no_img\")\n\norder <- c()\n#make sure that the dprimes and dims are in the same order!\nfor(i in colnames(dprime)){\n  order <- c(order, which(rownames(dims)==i))\n}\n\ndims <- cbind(dims, t(dprime[4,order]))\n\n\nplot(MDS2d$points, pch = 16, col = as.factor(dims[rownames(unique(dims[,-c(28)]))]), ylim = c(-2,2), xlim = c(-2,4), xlab = \"\", ylab = '')\nlegend(\"topright\", legend = paste(unique(info_base$Display)), pch = 16, col = palette()[1:7], cex=1, inset=c(0.02))\n\nmoviefunc3d <- function(time){\n  plot3d(MDS3d$points, \n         col = palette()[-7][as.factor(dims[rownames(unique(dims[,-c(28,29)])),29])], \n         xlab = '',\n         ylab = '', \n         zlab = '',\n         xlim = c(-3,3),\n         ylim = c(-3,3),\n         zlim = c(-3,3),\n         box = F,\n         axes = F)\n  legend3d(\"topright\", legend = paste(unique(info_base$Display)), pch = 16, col = palette()[c(1:6,8)], cex=1, inset=c(0.02))\n}\n\n\n#now let's do it with phits\nstress <- c()\n\nidx <- c()\nfor(i in 1:ncol(dprime)){\n  idx <- c(idx, which(info_base$Picture.ID %in% rownames(unique(t(dprime[4,])))[i]))\n}\n\nrelDrpime <- unique(t(dprime[4,]))\nrelDrpime <- cbind(relDrpime, info_base$Display[idx])\n\nfor(i in 1:20){\n  stress[i] <- isoMDS(dist(as.numeric(relDrpime[,1])), k=i)$stress\n}\n\nplot(stress, type = 'l', xlab = \"Number of Dims\", main= \"Stress vs # of Dims\")\npoints(stress, pch=4)\n\nMDS2d <- isoMDS(dist(unique(t(dprime[4,]))), k=1)\n\nMDS3d <- isoMDS(dist(unique(t(dprime[4,]))), k=3)\n\nplot(MDS2d$points, pch = 16, col = as.factor(relDrpime[,2]), xlab = \"\", ylab = '')\nlegend(\"topright\", legend = paste(unique(relDrpime[,2])), pch = 16, col = palette()[1:7], cex=1, inset=c(0.02))\n\n\n#now let's do it with phits for each emotion once.\nstress <- c()\n\ndprimeEmots <- dprimeMEAN\nfor(i in 1:length(unique(dprimeMEAN$subject))){\n  dprimeEmots$dprime[dprimeMEAN$subject==unique(dprimeMEAN$subject)[i]] <- dprimeMEAN$dprime[dprimeMEAN$subject==unique(dprimeMEAN$subject)[i]] - mean(dprimeMEAN$dprime[dprimeMEAN$subject==unique(dprimeMEAN$subject)[i]])\n}\n\nfor(i in 1:20){\n  stress <- c(stress, isoMDS(dist(unique(dprimeEmots$dprime)))$stress)\n}\n\nplot(stress, type = 'l', xlab = \"Number of Dims\", main= \"Stress vs # of Dims\")\npoints(stress, pch=4)\n\nMDS2d <- isoMDS(dist(unique(dprimeEmots$dprime)), k=1)\n\nMDS3d <- isoMDS(dist(t(dprimeEmots[4,])), k=3)\n\nplot(MDS2d$points, pch = 16, col = as.factor(rownames(MDS2d$points)), xlab = \"\", ylab = '')\nlegend(\"topright\", legend = rownames(MDS2d$points), pch = 16, col = palette()[1:7], cex=1, inset=c(0.02))\n\nrgl::plot3d(MDS3d$points, col = palette()[c(1:6,8)][as.factor(info_base$Display[match(rownames(MDS3d$points), info_base$Picture.ID)])], xlab = \"\", ylab = '', zlab='')\nrgl::legend3d(\"topright\", legend = levels(as.factor(info_base$Display[match(rownames(MDS3d$points), info_base$Picture.ID)])), pch = 16, col = palette()[c(1:6,8)], cex=1, inset=c(0.02))\nrgl::text3d(MDS3d$points[,1],MDS3d$points[,2],MDS3d$points[,3], texts = rownames(MDS3d$points), color= palette()[c(1:6,8)][as.factor(info_base$Display[match(rownames(MDS3d$points), info_base$Picture.ID)])])\n\ncentroidData <- cbind(MDS3d$points, as.factor(info_base$Display[match(rownames(MDS3d$points), info_base$Picture.ID)]))\n\n\n\ndprimes <- calc_dprime(data, \"Target_name\",\"no_img\")\n stress <- c()\n   \nfor(i in 1:20){\n   stress <- c(stress, isoMDS(dist(unique(t(dprimes[c(4),]))), k=i)$stress)\n }\n\n mds2d <- isoMDS(dist(t(dprimes[c(2,4),])), k=1)\n\n \nplot(test, col=as.factor(info_base$Display[match(rownames(test$points), info_base$Picture.ID)]), pch=16)\n legend(\"topright\", legend = levels(as.factor(info_base$Display[match(rownames(test$points), info_base$Picture.ID)])), pch = 16, col = palette()[1:7], cex=1, inset=c(0.02))\n \n dealwith0 <- dist(t(dprimes[c(4),]))\n dealwith0[dealwith0==0]<- 0.00000000000000000001\n \n vals <- bestnmds(dealwith0,k=1)\n \npar(mfrow=c(7,1), mar=c(1,0,2,.25))\n\nfor( i in unique(info_base$Display)){\n  stripchart(-vals$points[info_base$Display[match(rownames(vals$points), info_base$Picture.ID)]==i,], xlim = round(range(vals$points),-1), main=i, pch=16, col = )\n  }\n\npar(mfrow=c(1,1), mar=c(5.1, 4.1, 4.1, 2.1))\n \n\nvals <- bestnmds(dealwith0,k=2)\n\nplot(vals$points, col=palette()[c(1:6,8)][as.factor(info_base$Display[match(rownames(vals$points), info_base$Picture.ID)])], pch=16, xlim = c(-25,25), ylim = round(range(vals$points[,2]), -1))\nlegend(\"topright\", legend = levels(as.factor(info_base$Display[match(rownames(vals$points), info_base$Picture.ID)])), pch = 16, col = palette()[c(1:6,8)], cex=1, inset=c(-0.05,-0.02))\n\n#let's compare the mean intensity of each emotion across faces\nmeanInt <- aggregate(emotiveInfo_base$Intensity..0.1., by= list(emotion = emotiveInfo_base$Display), FUN=mean)\nbarplot(meanInt$x, names.arg = meanInt$emotion)\n\ncor.test(meanInt$x, aggregate(dprimeMEAN$dprime, list(dprimeMEAN$emotion), mean)$x[c(1:4,6:7)])\n\n#now let's confirm - is there a correlation between face-level dprime and rated intensity?\nemotivedprime <- dprime[, info_base$Display[match(colnames(dprime), info_base$Picture.ID)]!='neutral']\nemotiveInfo_base <- info_base[info_base$Display!='neutral',]\n\nemotiveInfo_base <- emotiveInfo_base[match(colnames(emotivedprime), emotiveInfo_base$Picture.ID),]\n\ncor.test(t(emotivedprime[1,]), emotiveInfo_base$Intensity..0.1.)\n\n\n",
    "created" : 1483984398660.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "349950941",
    "id" : "E51730E4",
    "lastKnownWriteTime" : 1479766183,
    "last_content_update" : 1479766183,
    "path" : "~/Dropbox/WSEFEP_HQ_042016/Data Analysis/FaceExpressivity/MDS Analysis.R",
    "project_path" : "MDS Analysis.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}